<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="12" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Web Suite" duration-ms="157394" started-at="2023-10-04T12:59:28 IDT" finished-at="2023-10-04T13:02:06 IDT">
    <groups>
    </groups>
    <test name="Web Tests" duration-ms="157394" started-at="2023-10-04T12:59:28 IDT" finished-at="2023-10-04T13:02:06 IDT">
      <class name="sanity.SauceDemoWebTestLogin">
        <test-method status="PASS" signature="startSession(java.lang.String)[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="startSession" is-config="true" duration-ms="17219" started-at="2023-10-04T13:01:36 IDT" finished-at="2023-10-04T13:01:53 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[web]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startSession -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="beforeMethod" is-config="true" duration-ms="34" started-at="2023-10-04T13:01:57 IDT" finished-at="2023-10-04T13:01:57 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWebTestLogin.test9_verifyLogInErrors(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test9_verifyLogInErrors(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="test9_verifyLogInErrors" duration-ms="1318" started-at="2023-10-04T13:01:57 IDT" description="Test09 - Verify login Errors messages" data-provider="data-provider" finished-at="2023-10-04T13:01:58 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Sorry, this user has been locked out.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9_verifyLogInErrors -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="afterMethod" is-config="true" duration-ms="1" started-at="2023-10-04T13:01:58 IDT" finished-at="2023-10-04T13:01:58 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2023-10-04T13:01:58 IDT" finished-at="2023-10-04T13:01:58 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWebTestLogin.test9_verifyLogInErrors(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test9_verifyLogInErrors(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="test9_verifyLogInErrors" duration-ms="1137" started-at="2023-10-04T13:01:58 IDT" description="Test09 - Verify login Errors messages" data-provider="data-provider" finished-at="2023-10-04T13:01:59 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[nir_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9_verifyLogInErrors -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-10-04T13:01:59 IDT" finished-at="2023-10-04T13:01:59 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="beforeMethod" is-config="true" duration-ms="15" started-at="2023-10-04T13:02:00 IDT" finished-at="2023-10-04T13:02:00 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWebTestLogin.test9_verifyLogInErrors(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test9_verifyLogInErrors(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="test9_verifyLogInErrors" duration-ms="1088" started-at="2023-10-04T13:02:00 IDT" description="Test09 - Verify login Errors messages" data-provider="data-provider" finished-at="2023-10-04T13:02:01 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[yoni_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9_verifyLogInErrors -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-10-04T13:02:01 IDT" finished-at="2023-10-04T13:02:01 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeSession()[pri:0, instance:sanity.SauceDemoWebTestLogin@23aae55]" name="closeSession" is-config="true" duration-ms="4981" started-at="2023-10-04T13:02:01 IDT" finished-at="2023-10-04T13:02:06 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeSession -->
      </class> <!-- sanity.SauceDemoWebTestLogin -->
      <class name="sanity.SauceDemoWeb">
        <test-method status="PASS" signature="startSession(java.lang.String)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="startSession" is-config="true" duration-ms="28026" started-at="2023-10-04T12:59:28 IDT" finished-at="2023-10-04T12:59:56 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[web]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startSession -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="363" started-at="2023-10-04T12:59:57 IDT" finished-at="2023-10-04T12:59:57 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test01_verifyNumberOfProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test01_verifyNumberOfProducts()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test01_verifyNumberOfProducts" duration-ms="584" started-at="2023-10-04T12:59:58 IDT" description="Test01 - Verify number of products" finished-at="2023-10-04T12:59:58 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01_verifyNumberOfProducts -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="5780" started-at="2023-10-04T12:59:59 IDT" finished-at="2023-10-04T13:00:04 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="29" started-at="2023-10-04T13:00:04 IDT" finished-at="2023-10-04T13:00:04 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test02_verifyPriceOfMostExpensiveItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test02_verifyPriceOfMostExpensiveItem()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test02_verifyPriceOfMostExpensiveItem" duration-ms="579" started-at="2023-10-04T13:00:04 IDT" description="Test02 - Verify highest price" finished-at="2023-10-04T13:00:05 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02_verifyPriceOfMostExpensiveItem -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="1810" started-at="2023-10-04T13:00:05 IDT" finished-at="2023-10-04T13:00:07 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="30" started-at="2023-10-04T13:00:07 IDT" finished-at="2023-10-04T13:00:07 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test03_verifyTotalPrice()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test03_verifyTotalPrice()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test03_verifyTotalPrice" duration-ms="3530" started-at="2023-10-04T13:00:07 IDT" description="Test03 - Verify product Total price" finished-at="2023-10-04T13:00:10 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03_verifyTotalPrice -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="1495" started-at="2023-10-04T13:00:11 IDT" finished-at="2023-10-04T13:00:12 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2023-10-04T13:00:12 IDT" finished-at="2023-10-04T13:00:12 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test04_verifyAddedProductsNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test04_verifyAddedProductsNumber()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test04_verifyAddedProductsNumber" duration-ms="1173" started-at="2023-10-04T13:00:12 IDT" description="Test04 - Verify products add to cart" finished-at="2023-10-04T13:00:14 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04_verifyAddedProductsNumber -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="12925" started-at="2023-10-04T13:00:15 IDT" finished-at="2023-10-04T13:00:28 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="50" started-at="2023-10-04T13:00:28 IDT" finished-at="2023-10-04T13:00:28 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test05_verifySocialButtonAreVisible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test05_verifySocialButtonAreVisible()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test05_verifySocialButtonAreVisible" duration-ms="3123" started-at="2023-10-04T13:00:28 IDT" description="Test05 - Verify buttons are visible" finished-at="2023-10-04T13:00:31 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05_verifySocialButtonAreVisible -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="1570" started-at="2023-10-04T13:00:31 IDT" finished-at="2023-10-04T13:00:33 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="42" started-at="2023-10-04T13:00:33 IDT" finished-at="2023-10-04T13:00:33 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test06_verifyRemovalAllProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test06_verifyRemovalAllProducts()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test06_verifyRemovalAllProducts" duration-ms="21242" started-at="2023-10-04T13:00:33 IDT" description="Test06 - Verify removal of all products" finished-at="2023-10-04T13:00:54 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test06_verifyRemovalAllProducts -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="3973" started-at="2023-10-04T13:00:55 IDT" finished-at="2023-10-04T13:00:59 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="15" started-at="2023-10-04T13:00:59 IDT" finished-at="2023-10-04T13:00:59 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test07_verifyAddedProductsNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test07_verifyAddedProductsNumber()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test07_verifyAddedProductsNumber" duration-ms="953" started-at="2023-10-04T13:00:59 IDT" description="Test07 - Verify number of products added to cart" finished-at="2023-10-04T13:01:00 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test07_verifyAddedProductsNumber -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="4177" started-at="2023-10-04T13:01:00 IDT" finished-at="2023-10-04T13:01:04 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="43" started-at="2023-10-04T13:01:04 IDT" finished-at="2023-10-04T13:01:04 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test09_verifyTotalPriceDB()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test09_verifyTotalPriceDB()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test09_verifyTotalPriceDB" duration-ms="576" started-at="2023-10-04T13:01:04 IDT" description="Test09 - Verify product Total price. checkout with customer from DB" finished-at="2023-10-04T13:01:05 IDT">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at extensions.DBActions.getCustomers(DBActions.java:16)
at workflows.Webflows.CheckoutWithCustomerFromDB(Webflows.java:82)
at sanity.SauceDemoWeb.test09_verifyTotalPriceDB(SauceDemoWeb.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test09_verifyTotalPriceDB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="1405" started-at="2023-10-04T13:01:07 IDT" finished-at="2023-10-04T13:01:09 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="beforeMethod" is-config="true" duration-ms="30" started-at="2023-10-04T13:01:09 IDT" finished-at="2023-10-04T13:01:09 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sanity.SauceDemoWeb.test8_verifyCartIcon()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test8_verifyCartIcon()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="test8_verifyCartIcon" duration-ms="13091" started-at="2023-10-04T13:01:09 IDT" description="Test08 - Verify image of the cart icon" finished-at="2023-10-04T13:01:22 IDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error Comparing Image File: FindFailed: C:\\Automation\\Projects\\FinalProject\\ImageRepository\\SauceDemoCart.png: (59x67) in R[0,0 1280x1024]@S(0)
  Line 2287, in file Region.java
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error Comparing Image File: FindFailed: C:\\Automation\\Projects\\FinalProject\\ImageRepository\\SauceDemoCart.png: (59x67) in R[0,0 1280x1024]@S(0)
  Line 2287, in file Region.java

at org.testng.Assert.fail(Assert.java:99)
at extensions.Verifications.visualElement(Verifications.java:49)
at sanity.SauceDemoWeb.test8_verifyCartIcon(SauceDemoWeb.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8_verifyCartIcon -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="afterMethod" is-config="true" duration-ms="2149" started-at="2023-10-04T13:01:26 IDT" finished-at="2023-10-04T13:01:28 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeSession()[pri:0, instance:sanity.SauceDemoWeb@742d4e15]" name="closeSession" is-config="true" duration-ms="7694" started-at="2023-10-04T13:01:28 IDT" finished-at="2023-10-04T13:01:36 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeSession -->
      </class> <!-- sanity.SauceDemoWeb -->
    </test> <!-- Web Tests -->
  </suite> <!-- Web Suite -->
</testng-results>
